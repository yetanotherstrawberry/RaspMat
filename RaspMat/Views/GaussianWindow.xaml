<Window x:Class="RaspMat.Views.GaussianWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:prop="clr-namespace:RaspMat.Properties"
        xmlns:vm="clr-namespace:RaspMat.ViewModels"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance vm:GaussianWindowViewModel, IsDesignTimeCreatable=False}" 
        Title="{x:Static prop:Resources.TITLE}"
        MinHeight="520"
        MinWidth="850">
    <Grid IsEnabled="{Binding IsFree}">
        <Grid.Resources>
            <Style TargetType="Button">
                <Setter Property="Width" Value="120" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Margin" Value="2" />
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="Height" Value="20" />
                <Setter Property="MinWidth" Value="40" />
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Height" Value="20" />
                <Setter Property="Margin" Value="5,2,5,2" />
            </Style>
            <Style TargetType="StackPanel">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Orientation" Value="Horizontal" />
            </Style>
            <Style x:Key="verticalStackpanel" TargetType="StackPanel">
                <Setter Property="Orientation" Value="Vertical" />
            </Style>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
            <StackPanel Style="{StaticResource verticalStackpanel}" Grid.Row="0">
                <GroupBox Header="{x:Static prop:Resources.ELEMENTARY_MAT_OP}">
                    <StackPanel Orientation="Vertical">
                        <GroupBox Header="{x:Static prop:Resources.SCALE}">
                            <StackPanel Orientation="Vertical">
                                <StackPanel>
                                    <TextBlock Text="{x:Static prop:Resources.SCALAR}" />
                                    <TextBox Text="{Binding Scalar}" />
                                </StackPanel>
                                <StackPanel>
                                    <Button Command="{Binding MatScaleComm}" Content="{x:Static prop:Resources.MATRIX}" />
                                    <Button Command="{Binding RowScaleComm}" Content="{x:Static prop:Resources.ROW}" />
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="{x:Static prop:Resources.SWAP_ROWS}">
                            <Button Content="{x:Static prop:Resources.SWAP_ROWS}" Command="{Binding MatSwapRowsComm}" />
                        </GroupBox>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="{x:Static prop:Resources.TRANSPOITION}">
                    <Button Content="{x:Static prop:Resources.TRANSPOSE}" Command="{Binding MatTransposeComm}" />
                </GroupBox>
                <GroupBox Header="{x:Static prop:Resources.MAT_HALF}">
                    <StackPanel Orientation="Vertical">
                        <StackPanel>
                            <StackPanel.Resources>
                                <Style TargetType="RadioButton">
                                    <Setter Property="Margin" Value="10,5,10,5" />
                                    <Setter Property="GroupName" Value="Side" />
                                </Style>
                            </StackPanel.Resources>
                            <RadioButton Content="{x:Static prop:Resources.LEFT}" x:Name="LeftSide" />
                            <RadioButton Content="{x:Static prop:Resources.RIGHT}" IsChecked="True" />
                        </StackPanel>
                        <StackPanel>
                            <StackPanel.Resources>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="CommandParameter" Value="{Binding Source={x:Reference LeftSide}, Path=IsChecked}" />
                                </Style>
                            </StackPanel.Resources>
                            <Button
                                Content="{x:Static prop:Resources.INSERT_I}"
                                Command="{Binding MatAddIComm}" />
                            <Button
                                Content="{x:Static prop:Resources.REMOVE_HALF}"
                                Command="{Binding MatRemoveIComm}" />
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
            <StackPanel VerticalAlignment="Bottom" Grid.Row="1" Margin="5">
                <!--<Button
                    Content="{x:Static prop:Resources.STEPS}"
                    Command="{Binding StepListWindowComm}" />-->
            </StackPanel>
        </Grid>
        <Grid Grid.Column="1" Grid.RowSpan="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <GroupBox Header="{x:Static prop:Resources.ALGORITHMS}" Grid.Row="0">
                <StackPanel>
                    <Button Command="{Binding MatGaussComm}" Content="{x:Static prop:Resources.REDUCED}" />
                    <Button Command="{Binding MatEchelonComm}" Content="{x:Static prop:Resources.ECHELON}" />
                </StackPanel>
            </GroupBox>
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible">
                <DataGrid
                    ItemsSource="{Binding MatrixDataTable}"
                    SelectionMode="Extended"
                    SelectionUnit="FullRow"
                    HeadersVisibility="None"
                    CanUserAddRows="False"
                    ColumnWidth="SizeToCells"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center">
                    <DataGrid.Resources>
                        <SolidColorBrush
                            x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                            Color="{x:Static SystemColors.ActiveCaptionColor}"/>
                    </DataGrid.Resources>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding GridSelectedRowComm}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>
            </ScrollViewer>
            <GroupBox Header="{x:Static prop:Resources.MATRIX}" Grid.Row="2">
                <StackPanel>
                    <Button Content="{x:Static prop:Resources.ENTER_MATRIX}" Command="{Binding UserInputComm}" />
                    <Button Content="{x:Static prop:Resources.SAVE_MAT}" Command="{Binding SerializeComm}" />
                    <Button Content="{x:Static prop:Resources.LOAD_MAT}" Command="{Binding DeserializeComm}" />
                </StackPanel>
            </GroupBox>
        </Grid>
    </Grid>
</Window>
